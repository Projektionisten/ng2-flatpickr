{"version":3,"sources":["../../node_modules/tslib/tslib.es6.js","ng://ng2-flatpickr/src/ng2-flatpickr.component.ts","ng://ng2-flatpickr/src/ng2-flatpickr.directive.ts","ng://ng2-flatpickr/src/ng2-flatpickr.module.ts"],"names":["__decorate","decorators","target","key","desc","d","c","arguments","length","r","Object","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","create","Ng2FlatpickrComponent","_this","this","newDateSelected","EventEmitter","_tabindex","onTouchedFn","defaultFlatpickrOptions","wrap","clickOpens","onChange","selectedDates","console","log","writeValue","emit","placeholder","addClass","hideButton","propagateChange","_","prototype","ti","Number","value","registerOnChange","fn","registerOnTouched","setDateFromInput","date","flatpickrElement","nativeElement","_flatpickr","setDate","setAltInputPlaceholder","altInput","setAttribute","ngAfterViewInit","config","assign","flatpickr","ngOnChanges","changes","hasOwnProperty","currentValue","onFocus","event","Output","ViewChild","static","Input","Ng2FlatpickrComponent_1","Component","selector","template","providers","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","multi","Ng2FlatpickrDirective","parent","ngControl","element","renderer","flatpickrOnChange","flatpickrOnClose","flatpickrOnOpen","flatpickrOnReady","onClick","toggle","formDirective","getControl","flatpickrOptions","parentNode","flatpickrAltInput","ngOnDestroy","destroy","formControlListener","unsubscribe","undefined","ngOnInit","globalOnChange","globalOnClose","onClose","globalOnOpen","onOpen","globalOnReady","onReady","altFormat","getOption","altInputClass","allowInput","appendTo","dateFormat","defaultDate","disable","disableMobile","enable","enableTime","enableSeconds","hourIncrement","inline","locale","maxDate","minDate","minuteIncrement","mode","nextArrow","noCalendar","eventOnChange","bind","eventOnClose","eventOnOpen","eventOnReady","parseDate","prevArrow","shorthandCurrentMonth","time_24hr","utc","weekNumbers","keys","forEach","control","valueChanges","subscribe","Date","setValue","onlySelf","emitEvent","emitModelToViewChange","emitViewToModelChange","dateStr","instance","option","defaultValue","localName","substring","toUpperCase","ControlContainer","NgControl","ElementRef","Renderer2","HostListener","Directive","exportAs","Ng2FlatpickrModule","NgModule","imports","CommonModule","declarations","exports"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from) {\r\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\r\n        to[j] = from[i];\r\n    return to;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import { EventEmitter, Output,Component, ViewChild, AfterViewInit, forwardRef, Input, OnChanges, SimpleChanges } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { FlatpickrOptions } from './flatpickr-options.interface';\n\ndeclare var require: any;\n\nif(typeof window !== 'undefined'){\n    require( 'flatpickr' );\n}\n\n@Component({\n\tselector: 'ng2-flatpickr',\n\ttemplate: `\n\t\t<div class=\"ng2-flatpickr-input-container\" #flatpickr>\n\t\t\t<input *ngIf=\"!hideButton\" class=\"ng2-flatpickr-input {{ addClass }}\" [placeholder]=\"placeholder\" [tabindex]=\"tabindex\" type=\"text\" (focus)=\"onFocus($event)\" data-input>\n\t\t\t<ng-content></ng-content>\n\t\t</div>\n\t\t`,\n\tproviders: [\n\t\t{\n\t\t\tprovide: NG_VALUE_ACCESSOR,\n\t\t\tuseExisting: forwardRef( () => Ng2FlatpickrComponent ),\n\t\t\tmulti: true\n\t\t}\n\t]\n})\nexport class Ng2FlatpickrComponent implements AfterViewInit, ControlValueAccessor, OnChanges {\n\n  @Output() newDateSelected = new EventEmitter<any>();\n\tpublic flatpickr: Object;\n\tprivate _tabindex = 0;\n\tonTouchedFn: Function = () => { };\n\n\tprivate defaultFlatpickrOptions: FlatpickrOptions = {\n\t\twrap: true,\n\t\tclickOpens: true,\n\t\tonChange: ( selectedDates: any ) => { \n\t\t\tconsole.log('selectged Date changed');\n\t\t\tconsole.log(selectedDates);\n\t\t\tthis.writeValue( selectedDates ); \n\t\t\tthis.newDateSelected.emit(selectedDates);\n\t\t}\n\t};\n\n\t@ViewChild('flatpickr', {\n\t\tstatic: true\n\t})\n\tflatpickrElement: any;\n\n\t@Input()\n\tconfig: FlatpickrOptions;\n\n\t@Input()\n\tplaceholder: string = \"\";\n\n \t@Input()\n\taddClass: string = \"\";\n\n\t@Input()\n\tsetDate: string | Date;\n\n\t@Input()\n\tget tabindex() { return this._tabindex; }\n\tset tabindex( ti: number ) { this._tabindex = Number( ti ); }\n\n\t@Input()\n\thideButton = false;\n\n\t///////////////////////////////////\n\n\twriteValue( value:any ) {\n\t\tthis.propagateChange( value );\n\t}\n\n\tregisterOnChange( fn: any ) {\n\t\tthis.propagateChange = fn;\n\t}\n\n\tregisterOnTouched(fn: any): void {\n\t\tthis.onTouchedFn = fn;\n\t}\n\n\tpropagateChange = ( _: any ) => {};\n\n\t///////////////////////////////////\n\n\tsetDateFromInput( date: any ) {\n\t\tthis.flatpickrElement.nativeElement._flatpickr.setDate( date, true );\n\t}\n\n\tsetAltInputPlaceholder( placeholder: string ) {\n\t\tthis.flatpickrElement.nativeElement._flatpickr.altInput.setAttribute( 'placeholder', placeholder );\n\t}\n\n\tngAfterViewInit() {\n\t\tconsole.log('ngAfterViewInit');\n\t\tif( this.config ) {\n\t\t\tObject.assign( this.defaultFlatpickrOptions, this.config );\n\t\t}\n\t\tif( this.flatpickrElement.nativeElement.flatpickr ) {\n\t\t\tthis.flatpickr = this.flatpickrElement.nativeElement.flatpickr( this.defaultFlatpickrOptions );\n\t\t}\n\t\tif( this.setDate ) {\n\t\t\tthis.setDateFromInput( this.setDate );\n\t\t}\n\t}\n\n\tngOnChanges( changes: SimpleChanges ) {\n\t\tconsole.log('ngOnChanges');\n\t\tconsole.log(changes);\n\t\tif( this.flatpickrElement.nativeElement \n\t\t\t&& this.flatpickrElement.nativeElement._flatpickr ) {\n\t\t\t\t\n\t\t\t\tif( changes.hasOwnProperty( 'setDate' ) \n\t\t\t\t\t&& changes[ 'setDate' ].currentValue ) {\n\t\t\t\t\t\tthis.setDateFromInput( changes[ 'setDate' ].currentValue );\n\t\t\t\t\t}\n\n\t\t\t\tif( this.config.altInput\n\t\t\t\t\t&& changes.hasOwnProperty( 'placeholder' ) \n\t\t\t\t\t&& changes[ 'placeholder' ].currentValue ) {\n\t\t\t\t\t\tthis.setAltInputPlaceholder( changes[ 'placeholder' ].currentValue );\n\t\t\t\t\t}\n\t\t\t}\n\t}\n\t\n\tonFocus(event: any) {\n\t\tthis.onTouchedFn();\n\t}\n}\n","import {\n\tAfterViewInit, Directive, ElementRef, EventEmitter, HostListener, Input,\n\tOnDestroy, OnInit, Output, Renderer2, SimpleChanges, OnChanges\n} from '@angular/core';\nimport { ControlContainer, FormControl, NgControl } from '@angular/forms';\nimport { Subscription } from 'rxjs';\nimport { FlatpickrEvent } from './flatpickr-event.interface';\nimport { FlatpickrInstance } from './flatpickr-instance';\nimport { FlatpickrOptions } from './flatpickr-options.interface';\n\n@Directive({ selector: '[flatpickr]', exportAs: 'ng2-flatpickr' })\nexport class Ng2FlatpickrDirective implements AfterViewInit, OnDestroy, OnInit, OnChanges {\n\t/**\n\t * The flatpickr configuration as a single object of values.\n\t *\n\t * See https://chmln.github.io/flatpickr/options/ for full list.\n\t */\n\t@Input( 'flatpickr' ) public flatpickrOptions: FlatpickrOptions;\n\n\t/**\n\t * Placeholder for input field.\n\t *\n\t * Default:  null\n\t */\n\t@Input( 'placeholder' ) public placeholder: string;\n\n\t/**\n\t * Exactly the same as date format, but for the altInput field.\n\t *\n\t * Default:  \"F j, Y\"\n\t */\n\t@Input( 'altFormat' ) public flatpickrAltFormat: string;\n\n\t/**\n\t * Show the user a readable date (as per altFormat), but return something\n\t * totally different to the server.\n\t *\n\t * Default:  false\n\t */\n\t@Input( 'altInput' ) public flatpickrAltInput: boolean;\n\n\t/**\n\t * This class will be added to the input element created by the altInput\n\t * option.\n\t *\n\t * Default:  \"\"\n\t */\n\t@Input( 'altInputClass' ) public flatpickrAltInputClass: string;\n\n\t/**\n\t * Allows the user to enter a date directly input the input field. By\n\t * default, direct entry is disabled.\n\t *\n\t * Default:  false\n\t */\n\t@Input( 'allowInput' ) public flatpickrAllowInput: boolean;\n\n\t/**\n\t * Instead of body, appends the calendar to the specified node instead.\n\t *\n\t * Default:  null\n\t */\n\t@Input( 'appendTo' ) public flatpickrAppendTo: any; // HTMLElement\n\n\t/**\n\t * Whether clicking on the input should open the picker.\n\t * You could disable this if you wish to open the calendar manually\n\t * with.open().\n\t *\n\t * Default:  true\n\t */\n\t@Input( 'clickOpens' ) public flatpickrClickOpens: boolean;\n\n\t/**\n\t * A string of characters which are used to define how the date will be\n\t * displayed in the input box.\n\t * See https://chmln.github.io/flatpickr/formatting/ for supported tokens.\n\t *\n\t * Default:  \"Y-m-d\"\n\t */\n\t@Input( 'dateFormat' ) public flatpickrDateFormat: string;\n\n\t/**\n\t * Sets the initial selected date(s).\n\t *\n\t * If you're using {mode: \"multiple\"} or a range calendar supply an Array of\n\t * Date objects or an Array of date strings which follow your dateFormat.\n\t *\n\t * Otherwise, you can supply a single Date object or a date string.\n\t *\n\t * Default:  null\n\t */\n\t@Input( 'defaultDate' ) public flatpickrDefaultDate: string | Date;\n\n\t/**\n\t * Disable an array of specific dates, date ranges, or functions to disable\n\t * dates. See https://chmln.github.io/flatpickr/examples/#disabling-specific-dates\n\t *\n\t * Default:  []\n\t */\n\t@Input( 'disable' ) public flatpickrDisable: string[] | Date[];\n\n\t/**\n\t * Set disableMobile to true to always use the non-native picker. By\n\t * default, Flatpickr utilizes native datetime widgets unless certain\n\t * options (e.g. disable) are used.\n\t *\n\t * Default:  false\n\t */\n\t@Input( 'disableMobile' ) public flatpickrDisableMobile: boolean;\n\n\t/**\n\t * Enable an array of specific dates, date ranges, or functions to enable\n\t * dates. See https://chmln.github.io/flatpickr/examples/#disabling-all-dates-except-select-few\n\t *\n\t * Default:  []\n\t */\n\t@Input( 'enable' ) public flatpickrEnable: string[] | Date[];\n\n\t/**\n\t * Enables time picker.\n\t *\n\t * Default:  false\n\t */\n\t@Input( 'enableTime' ) public flatpickrEnableTime: boolean;\n\n\t/**\n\t * Enables seconds in the time picker.\n\t *\n\t * Default:  false\n\t */\n\t@Input( 'enableSeconds' ) public flatpickrEnableSeconds: boolean;\n\n\t/**\n\t * Adjusts the step for the hour input (incl. scrolling).\n\t *\n\t * Default:  1\n\t */\n\t@Input( 'hourIncrement' ) public flatpickrHourIncrement: number;\n\n\t/**\n\t * Displays the calendar inline.\n\t *\n\t * Default:  false\n\t */\n\t@Input( 'inline' ) public flatpickrInline: boolean;\n\n\t/**\n\t * Use a specific locale for the flatpickr instance.\n\t *\n\t * Default:  null\n\t */\n\t@Input( 'locale' ) public flatpickrLocale: Object;\n\n\t/**\n\t * The maximum date that a user can pick to (inclusive).\n\t *\n\t * Default:  null\n\t */\n\t@Input( 'maxDate' ) public flatpickrMaxDate: string | Date;\n\n\t/**\n\t * The minimum date that a user can start picking from (inclusive).\n\t *\n\t * Default:  null\n\t */\n\t@Input( 'minDate' ) public flatpickrMinDate: string | Date;\n\n\t/**\n\t * Adjusts the step for the minute input (incl. scrolling).\n\t *\n\t * Default:  5\n\t */\n\t@Input( 'minuteIncrement' ) public flatpickrMinuteIncrement: number;\n\n\t/**\n\t * \"single\", \"multiple\", or \"range\"\n\t *\n\t * Default:  \"single\"\n\t */\n\t@Input( 'mode' ) public flatpickrMode: string;\n\n\t/**\n\t * HTML for the arrow icon, used to switch months.\n\t *\n\t * Default:  \">\"\n\t */\n\t@Input( 'nextArrow' ) public flatpickrNextArrow: string;\n\n\t/**\n\t * Hides the day selection in calendar. Use it along with enableTime to\n\t * create a time picker.\n\t *\n\t * Default:  false\n\t */\n\t@Input( 'noCalendar' ) public flatpickrNoCalendar: boolean;\n\n\t/**\n\t * Function that expects a date string and must return a Date object.\n\t *\n\t * Default:  false\n\t */\n\t@Input( 'parseDate' ) public flatpickrParseDate: Function;\n\n\t/**\n\t * HTML for the left arrow icon.\n\t *\n\t * Default:  \"<\"\n\t */\n\t@Input( 'prevArrow' ) public flatpickrPrevArrow: string;\n\n\t/**\n\t * Show the month using the shorthand version (ie, Sep instead of September).\n\t *\n\t * Default:  false\n\t */\n\t@Input( 'shorthandCurrentMonth' ) public flatpickrShorthandCurrentMonth: boolean;\n\n\t/**\n\t * Position the calendar inside the wrapper and next to the input element\n\t * (Leave false unless you know what you're doing).\n\t *\n\t * Default:  false\n\t */\n\t@Input( 'static' ) public flatpickrStatic: boolean;\n\n\t/**\n\t * Displays time picker in 24 hour mode without AM/PM selection when enabled.\n\t *\n\t * Default:  false\n\t */\n\t@Input( 'time_24hr' ) public flatpickrTime_24hr: boolean;\n\n\t@Input( 'utc' ) public flatpickrUtc: boolean;\n\n\t/**\n\t * Enables display of week numbers in calendar.\n\t *\n\t * Default:  false\n\t */\n\t@Input( 'weekNumbers' ) public flatpickrWeekNumbers: boolean;\n\n\t/**\n\t * Custom elements and input groups.\n\t *\n\t * Default:  false\n\t */\n\t@Input( 'wrap' ) public flatpickrWrap: boolean;\n\n\t/**\n\t * onChange gets triggered when the user selects a date, or changes the time on a selected date.\n\t *\n\t * Default:  null\n\t */\n\t@Output( 'onChange' ) public flatpickrOnChange: EventEmitter<FlatpickrEvent> = new EventEmitter();\n\n\t/**\n\t * onClose gets triggered when the calendar is closed.\n\t *\n\t * Default:  null\n\t */\n\t@Output( 'onClose' ) public flatpickrOnClose: EventEmitter<FlatpickrEvent> = new EventEmitter();\n\n\t/**\n\t * onOpen gets triggered when the calendar is opened.\n\t *\n\t * Default:  null\n\t */\n\t@Output( 'onOpen' ) public flatpickrOnOpen: EventEmitter<FlatpickrEvent> = new EventEmitter();\n\n\t/**\n\t * onReady gets triggered once the calendar is in a ready state.\n\t *\n\t * Default:  null\n\t */\n\t@Output( 'onReady' ) public flatpickrOnReady: EventEmitter<FlatpickrEvent> = new EventEmitter();\n\n\t/** Allow double-clicking on the control to open/close it. */\n\t@HostListener( 'dblclick' )\n\tpublic onClick() {\n\t\tthis.flatpickr.toggle();\n\t}\n\n\tprotected globalOnChange: Function;\n\tprotected globalOnClose: Function;\n\tprotected globalOnOpen: Function;\n\tprotected globalOnReady: Function;\n\n\tprotected flatpickr: FlatpickrInstance;\n\tprotected formControlListener: Subscription;\n\n\t/** Allow access properties using index notation */\n\t[key:string]: any;\n\n\tconstructor(\n\t\tprotected parent: ControlContainer,\n\t\tprotected ngControl: NgControl,\n\t\tprotected element: ElementRef,\n\t\tprotected renderer: Renderer2\n\t) {}\n\n\tget control(): FormControl {\n\t\treturn this.parent ? this.parent.formDirective.getControl(this.ngControl) : null;\n\t}\n\n\tngAfterViewInit() {\n\t\t/** We cannot initialize the flatpickr instance in ngOnInit(); it will\n\t\t\trandomize the date when the form control initializes. */\n\t\tlet nativeElement = this.element.nativeElement;\n\n\t\tif (typeof nativeElement === 'undefined' || nativeElement === null) {\n\t\t\tthrow 'Error: invalid input element specified';\n\t\t}\n\n\t\tif (this.flatpickrOptions.wrap) {\n\t\t\tthis.renderer.setAttribute( this.element.nativeElement, 'data-input', '' );\n\t\t\tnativeElement = nativeElement.parentNode;\n\t\t}\n\n\t\tthis.flatpickr = <FlatpickrInstance>nativeElement.flatpickr( this.flatpickrOptions );\n\t}\n\n\tngOnChanges( changes: SimpleChanges ) {\n\t\tif( this.flatpickr\n\t\t\t&& this.flatpickrAltInput\n\t\t\t&& changes.hasOwnProperty( 'placeholder' ) \n\t\t\t&& changes[ 'placeholder' ].currentValue ) {\n\t\t\t\tthis.flatpickr.altInput.setAttribute( 'placeholder', changes[ 'placeholder' ].currentValue );\n\t\t\t}\n\t}\n\n\tngOnDestroy() {\n\t\tif (this.flatpickr) {\n\t\t\tthis.flatpickr.destroy();\n\t\t}\n\n\t\tif (this.formControlListener) {\n\t\t\tthis.formControlListener.unsubscribe();\n\t\t\tthis.formControlListener = undefined;\n\t\t}\n\n\t\tthis.flatpickrOnChange = undefined;\n\t\tthis.flatpickrOnClose = undefined;\n\t\tthis.flatpickrOnOpen = undefined;\n\t\tthis.flatpickrOnReady = undefined;\n\t}\n\n\tngOnInit() {\n\t\tthis.globalOnChange = this.flatpickrOptions.onChange;\n\t\tthis.globalOnClose = this.flatpickrOptions.onClose;\n\t\tthis.globalOnOpen = this.flatpickrOptions.onOpen;\n\t\tthis.globalOnReady = this.flatpickrOptions.onReady;\n\n\t\tthis.flatpickrOptions = {\n\t\t\taltFormat: this.getOption('altFormat'),\n\t\t\taltInput: this.getOption('altInput'),\n\t\t\taltInputClass: this.getOption('altInputClass'),\n\t\t\tallowInput: this.getOption('allowInput'),\n\t\t\tappendTo: this.getOption('appendTo'),\n\t\t\tclickOpens: this.getOption('clickOpens', true),\n\t\t\tdateFormat: this.getOption('dateFormat'),\n\t\t\tdefaultDate: this.getOption('defaultDate'),\n\t\t\tdisable: this.getOption('disable'),\n\t\t\tdisableMobile: this.getOption('disableMobile'),\n\t\t\tenable: this.getOption('enable'),\n\t\t\tenableTime: this.getOption('enableTime'),\n\t\t\tenableSeconds: this.getOption('enableSeconds'),\n\t\t\thourIncrement: this.getOption('hourIncrement'),\n\t\t\tinline: this.getOption('inline'),\n\t\t\tlocale: this.getOption('locale'),\n\t\t\tmaxDate: this.getOption('maxDate'),\n\t\t\tminDate: this.getOption('minDate'),\n\t\t\tminuteIncrement: this.getOption('minuteIncrement'),\n\t\t\tmode: this.getOption('mode'),\n\t\t\tnextArrow: this.getOption('nextArrow'),\n\t\t\tnoCalendar: this.getOption('noCalendar'),\n\t\t\tonChange: this.eventOnChange.bind(this),\n\t\t\tonClose: this.eventOnClose.bind(this),\n\t\t\tonOpen: this.eventOnOpen.bind(this),\n\t\t\tonReady: this.eventOnReady.bind(this),\n\t\t\tparseDate: this.getOption('parseDate'),\n\t\t\tprevArrow: this.getOption('prevArrow'),\n\t\t\tshorthandCurrentMonth: this.getOption('shorthandCurrentMonth'),\n\t\t\tstatic: this.getOption('static'),\n\t\t\ttime_24hr: this.getOption('time_24hr'),\n\t\t\tutc: this.getOption('utc'),\n\t\t\tweekNumbers: this.getOption('weekNumbers'),\n\t\t\twrap: this.getOption('wrap', true),\n\t\t};\n\n\t\t// Remove unset properties\n\t\tObject.keys( this.flatpickrOptions ).forEach( ( key: string ) => {\n\t\t\t(this.flatpickrOptions[key] === undefined) &&\n\t\t\t\tdelete this.flatpickrOptions[key];\n\t\t} );\n\n\t\tif (this.control) {\n\t\t\tthis.formControlListener = this.control.valueChanges\n\t\t\t\t.subscribe( ( value: any ) => {\n\t\t\t\t\tif ( !( value instanceof Date ) ) {\n\t\t\t\t\t\t// Quietly update the value of the form control to be a\n\t\t\t\t\t\t// Date object. This avoids any external subscribers\n\t\t\t\t\t\t// from being notified a second time (once for the user\n\t\t\t\t\t\t// initiated event, and once for our conversion to\n\t\t\t\t\t\t// Date()).\n\t\t\t\t\t\tthis.control.setValue( new Date( '' + value ), {\n\t\t\t\t\t\t\tonlySelf: true,\n\t\t\t\t\t\t\temitEvent: false,\n\t\t\t\t\t\t\temitModelToViewChange: false,\n\t\t\t\t\t\t\temitViewToModelChange: false\n\t\t\t\t\t\t} );\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t}\n\t}\n\n\t/**\n\t * Fire off the event emitter for the directive element, and also for the\n\t * global onChange callback, if defined.\n\t */\n\tprotected eventOnChange( selectedDates: Date[], dateStr: string, instance: Object ): void {\n\t\tlet event: FlatpickrEvent = {\n\t\t\tselectedDates: selectedDates,\n\t\t\tdateStr: dateStr,\n\t\t\tinstance: instance\n\t\t};\n\t\tif ( this.flatpickrOnChange ) {\n\t\t\tthis.flatpickrOnChange.emit( event );\n\t\t}\n\t\tif( this.globalOnChange ) {\n\t\t\tthis.globalOnChange( event );\n\t\t}\n\t}\n\n\t/**\n\t * Fire off the event emitter for the directive element, and also for the\n\t * global onClose callback, if defined.\n\t */\n\tprotected eventOnClose( selectedDates: Date[], dateStr: string, instance: Object ): void {\n\t\tlet event: FlatpickrEvent = {\n\t\t\tselectedDates: selectedDates,\n\t\t\tdateStr: dateStr,\n\t\t\tinstance: instance\n\t\t};\n\t\tif ( this.flatpickrOnClose ) {\n\t\t\tthis.flatpickrOnClose.emit( event );\n\t\t}\n\t\tif( this.globalOnClose ) {\n\t\t\tthis.globalOnClose( event );\n\t\t}\n\t}\n\n\t/**\n\t * Fire off the event emitter for the directive element, and also for the\n\t * global onOpen callback, if defined.\n\t */\n\tprotected eventOnOpen( selectedDates: Date[], dateStr: string, instance: Object ): void {\n\t\tlet event: FlatpickrEvent = {\n\t\t\tselectedDates: selectedDates,\n\t\t\tdateStr: dateStr,\n\t\t\tinstance: instance\n\t\t};\n\t\tif ( this.flatpickrOnOpen ) {\n\t\t\tthis.flatpickrOnOpen.emit( event );\n\t\t}\n\t\tif( this.globalOnOpen ) {\n\t\t\tthis.globalOnOpen( event );\n\t\t}\n\t}\n\n\t/**\n\t * Fire off the event emitter for the directive element, and also for the\n\t * global onReady callback, if defined.\n\t */\n\tprotected eventOnReady( selectedDates: Date[], dateStr: string, instance: Object ): void {\n\t\tlet event: FlatpickrEvent = {\n\t\t\tselectedDates: selectedDates,\n\t\t\tdateStr: dateStr,\n\t\t\tinstance: instance\n\t\t};\n\t\tif ( this.flatpickrOnReady ) {\n\t\t\tthis.flatpickrOnReady.emit( event );\n\t\t}\n\t\tif( this.globalOnReady ) {\n\t\t\tthis.globalOnReady( event );\n\t\t}\n\t}\n\n\t/**\n\t * Return the configuration value for option {option}, or {defaultValue} if it\n\t * doesn't exist.\n\t */\n\tprotected getOption( option: string, defaultValue?: any ): any {\n\t\tlet localName = 'flatpickr' + option.substring( 0, 1 ).toUpperCase()\n\t\t\t+ option.substring( 1 );\n\n\t\tif ( typeof this[localName] !== 'undefined' ) {\n\t\t\treturn this[localName];\n\t\t} else if ( typeof this.flatpickrOptions[option] !== 'undefined' ) {\n\t\t\treturn this.flatpickrOptions[option];\n\t\t} else {\n\t\t\treturn defaultValue;\n\t\t}\n\t}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Ng2FlatpickrComponent } from './ng2-flatpickr.component';\nimport { Ng2FlatpickrDirective } from './ng2-flatpickr.directive';\nimport 'flatpickr';\n\n@NgModule({\n    imports: [CommonModule],\n    declarations: [\n        Ng2FlatpickrComponent,\n        Ng2FlatpickrDirective\n    ],\n    exports: [\n        Ng2FlatpickrComponent,\n        Ng2FlatpickrDirective\n    ]\n})\nexport class Ng2FlatpickrModule {\n}"]}